version: 2.1

commands:
  yarn_install:
    steps:
      - restore_cache:
          key: besidethemusic-modules-{{ checksum "yarn.lock" }}
      - run:
          command: |
            yum -y install wget
            wget https://dl.yarnpkg.com/rpm/yarn.repo -O /etc/yum.repos.d/yarn.repo
            curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -
            yum -y install yarn
            yarn install
      - save_cache:
          key: besidethemusic-modules-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/yarn

executors:
  default:
    working_directory: ~/besidethemusic
  aws-cli:
    docker:
      - image: amazon/aws-cli
    working_directory: ~/besidethemusic

jobs:
  test:
    executor:
      name: default
    steps:
      - checkout
      - yarn_install
      - run:
          command: |
            yarn generate
  upload:
    executor:
      name: aws-cli
    parameters:
      s3_bucket_name:
        type: string
    steps:
      - checkout
      - yarn_install
      - run:
          command: |
            yarn generate
            aws s3 sync --acl public-read ./dist/ s3://$S3_BUCKET_NAME
          environment:
            S3_BUCKET_NAME: << parameters.s3_bucket_name >>
  invalidate:
    executor:
      name: aws-cli
    parameters:
      cloudfront_distribution_id:
        type: string
    steps:
      - checkout
      - run:
          command: |
            aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths '/*'
          environment:
            CLOUDFRONT_DISTRIBUTION_ID: << parameters.cloudfront_distribution_id >>

workflows:
  test:
    jobs:
      - test:
          name: test
          filters:
            branches:
              ignore: [master]
  deploy:
    jobs:
      - test:
          name: test
          filters:
            branches:
              only: [master]
      - upload:
          name: upload
          s3_bucket_name: besidethemusic-production
          requires: [test]
          filters:
            branches:
              only: [master]
      - invalidate:
          name: invalidate
          cloudfront_distribution_id: E2GLAMASJDSYOI
          requires: [upload]
          filters:
            branches:
              only: [master]
